{"remainingRequest":"/Users/abicotter/Desktop/DataBuddy/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/abicotter/Desktop/DataBuddy/frontend/src/components/Main.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/abicotter/Desktop/DataBuddy/frontend/src/components/Main.vue","mtime":1609355067969},{"path":"/Users/abicotter/Desktop/DataBuddy/frontend/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/abicotter/Desktop/DataBuddy/frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/abicotter/Desktop/DataBuddy/frontend/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/abicotter/Desktop/DataBuddy/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/abicotter/Desktop/DataBuddy/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmRhdGEgewoJd2lkdGg6IDgwMHB4OwoJaGVpZ2h0OiA0MDBweDsKCWJhY2tncm91bmQtY29sb3I6IHJnYigyMzIsIDIzNCwgMjM1KTsKCW1hcmdpbjogYXV0bzsKCXBhZGRpbmctdG9wOiAyMHB4OwoJb3ZlcmZsb3c6IHNjcm9sbDsKCXBvc2l0aW9uOiByZWxhdGl2ZTsKfQoKLmRhdGE6Oi13ZWJraXQtc2Nyb2xsYmFyIHsKCS13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTsKfQoKLmRhdGE6Oi13ZWJraXQtc2Nyb2xsYmFyOnZlcnRpY2FsIHsKCXdpZHRoOiAxMXB4Owp9CgouZGF0YTo6LXdlYmtpdC1zY3JvbGxiYXI6aG9yaXpvbnRhbCB7CgloZWlnaHQ6IDBweDsKfQoKLmRhdGE6Oi13ZWJraXQtc2Nyb2xsYmFyLXRodW1iIHsKCWJvcmRlci1yYWRpdXM6IDhweDsKCWJvcmRlcjogMnB4IHNvbGlkIHJnYigyMzIsIDIzNCwgMjM1KTsgLyogc2hvdWxkIG1hdGNoIGJhY2tncm91bmQsIGNhbid0IGJlIHRyYW5zcGFyZW50ICovCgliYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuNSk7Cn0KCi5jb3B5IHsKCXBvc2l0aW9uOiBzdGlja3k7Cglib3R0b206IDEwcHg7CglyaWdodDogMTBweDsKCWZsb2F0OiByaWdodDsKfQo="},{"version":3,"sources":["Main.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"Main.vue","sourceRoot":"src/components","sourcesContent":["<template>\n\t<div class=\"home\">\n\t\t<h1>DATA BUDDY</h1>\n\n\t\t<h3>\n\t\t\tUpload an image file for of data, and get it it in a csv form below to\n\t\t\tskip manual data entry!\n\t\t</h3>\n\t\t<h5>\n\t\t\tPlease note: this uses pytesseract to perform the OCR component. The\n\t\t\tprogram is not 100% accurate, so ensure you validate your data after\n\t\t\tconverting to a usable form.\n\t\t</h5>\n\t\t<form action=\"/action_page.php\">\n\t\t\t<input\n\t\t\t\ttype=\"file\"\n\t\t\t\tid=\"myfile\"\n\t\t\t\tname=\"myfile\"\n\t\t\t\t@change=\"onFileChange\"\n\t\t\t/><br /><br />\n\t\t</form>\n\t\t<div v-if=\"convertedData\" class=\"data\" id=\"data\">\n\t\t\t<span v-for=\"data in convertedData\" :key=\"data\" contenteditable>\n\t\t\t\t{{ data }} <br />\n\t\t\t</span>\n\t\t</div>\n\t\t<button v-if=\"convertedData\" class=\"copy\" @click=\"copyData\">COPY</button>\n\t</div>\n</template>\n\n<script>\nimport axios from \"axios\";\n\nexport default {\n\tname: \"HelloWorld\",\n\tdata() {\n\t\treturn {\n\t\t\timage: null,\n\t\t\tconvertedData: null,\n\t\t};\n\t},\n\tmethods: {\n\t\tonFileChange(e) {\n\t\t\tvar files = e.target.files || e.dataTransfer.files;\n\t\t\tif (!files.length) return;\n\t\t\tthis.createImage(files[0]);\n\t\t},\n\t\tcopyData() {\n\t\t\tvar copyText = document.getElementById(\"data\").innerText;\n\t\t\tvar input_temp = document.createElement(\"textarea\");\n\t\t\tinput_temp.innerHTML = copyText;\n\t\t\tdocument.body.appendChild(input_temp);\n\t\t\tinput_temp.select();\n\t\t\tinput_temp.setSelectionRange(0, 99999); /*For mobile devices*/\n\t\t\tdocument.execCommand(\"copy\");\n\t\t\talert(input_temp.value);\n\t\t\tdocument.body.removeChild(input_temp);\n\t\t},\n\t\tcreateImage(file) {\n\t\t\tvar reader = new FileReader();\n\t\t\tvar vm = this;\n\n\t\t\treader.onload = (e) => {\n\t\t\t\tvm.image = e.target.result;\n\t\t\t};\n\t\t\treader.readAsDataURL(file);\n\t\t},\n\t},\n\twatch: {\n\t\timage() {\n\t\t\tvar formData = new FormData();\n\n\t\t\tlet image = this.image.split(\"base64,\")[1];\n\n\t\t\tformData.append(\"file\", image);\n\n\t\t\tconst baseURI = \"http://127.0.0.1:5000/getCSV\";\n\t\t\taxios\n\t\t\t\t.post(baseURI, formData, {\n\t\t\t\t\theaders: {\n\t\t\t\t\t\t\"Content-Type\": \"multipart/form-data\",\n\t\t\t\t\t},\n\t\t\t\t})\n\t\t\t\t.then((result) => {\n\t\t\t\t\tthis.convertedData = result.data.result;\n\t\t\t\t})\n\t\t\t\t.catch((error) => {\n\t\t\t\t\tconsole.log(error);\n\t\t\t\t});\n\t\t},\n\t},\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style>\n.data {\n\twidth: 800px;\n\theight: 400px;\n\tbackground-color: rgb(232, 234, 235);\n\tmargin: auto;\n\tpadding-top: 20px;\n\toverflow: scroll;\n\tposition: relative;\n}\n\n.data::-webkit-scrollbar {\n\t-webkit-appearance: none;\n}\n\n.data::-webkit-scrollbar:vertical {\n\twidth: 11px;\n}\n\n.data::-webkit-scrollbar:horizontal {\n\theight: 0px;\n}\n\n.data::-webkit-scrollbar-thumb {\n\tborder-radius: 8px;\n\tborder: 2px solid rgb(232, 234, 235); /* should match background, can't be transparent */\n\tbackground-color: rgba(0, 0, 0, 0.5);\n}\n\n.copy {\n\tposition: sticky;\n\tbottom: 10px;\n\tright: 10px;\n\tfloat: right;\n}\n</style>\n"]}]}